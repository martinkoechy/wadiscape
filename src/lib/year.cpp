/* *  year.cpp *  MKLandscape * *  Created by Forschung on Fri Jun 23 2006. *  Copyright (c) 2006 Martin Koechy. All rights reserved. * */#include "year.h"extern int NZ, NS;void year (WATER* W, VEGETATION* V, climate_names climateID, float lsu, float rain){  VEGETATION::sum_seeds_prod = 0;    for(int iz = 0; iz<NZ; iz++)	for(int is = 0; is<NS; is++)	{	  W[iz*NZ+is].add_rain(rain);	  // growth of annuals calculated first because annuals start growing before shrubs	  // effect of shrubs on growth of annuals if the effect of last year's shrub cover!	  V[iz*NZ+is].mort_seedbank();	  V[iz*NZ+is].grow_ann(W[iz*NZ+is].avail_abs[0], climateID);	  V[iz*NZ+is].grow_shrub(W[iz*NZ+is].avail_abs[0], W[iz*NZ+is].mean_avail_abs());	}	    calc_statistics(V, W); // set _WHEN_ to "before" (main.cpp) if this is executed    foraging(V, lsu, W);    for(int iz = 0; iz<NZ; iz++)	for(int is = 0; is<NS; is++)	  VEGETATION::sum_seeds_prod += V[iz*NZ+is].prod_seeds();    float LDD_seeds = VEGETATION::sum_seeds_prod /float(NZ*NS); // average number of seeds per cell dispersed far away    // long distance dispersal for annuals, colonization for shrubs  // in 50% der leeren Zellen -> 0.1% der mittleren Samenzahl // woher daten?  for(int iz = 0; iz<NZ; iz++)	for(int is = 0; is<NS; is++)	{	  V[iz*NZ+is].colonize_shrub (iz, is, W[iz*NZ+is].avail_abs[0], V);	  if (V[iz*NZ+is].seeds_prod == 0 && z01()<0.5)		V[iz*NZ+is].seedbank += long (0.001*LDD_seeds);  // 2006.02.09 von 1pro mille auf 1% gesetzt _ sonst kleiner 1 keine Paper!!!	}	  //  calc_statistics(V); // set _WHEN_ to "after" (main.cpp) if this is executed}void calc_statistics (VEGETATION* V, WATER* W){  //-----------------------------  // statistics plateau  VEGETATION::N_ann_cells = 0;  VEGETATION::S_ann_cells = 0;  VEGETATION::W_ann_cells = 0;  VEGETATION::P_ann_cells = 0;  VEGETATION::N_shrub_cells = 0;  VEGETATION::S_shrub_cells = 0;  VEGETATION::W_shrub_cells = 0;  VEGETATION::P_shrub_cells = 0;  VEGETATION::N_veg_cells = 0;  VEGETATION::S_veg_cells = 0;  VEGETATION::W_veg_cells = 0;  VEGETATION::P_veg_cells = 0;  VEGETATION::N_bare_cells = 0;  VEGETATION::S_bare_cells = 0;  VEGETATION::W_bare_cells = 0;  VEGETATION::P_bare_cells = 0;    int p = 0, n = 0, w = 0, s = 0;  for(int iz = 0; iz<NZ; iz++) 	for(int is = 0; is < NS; is++)	{		if(W[iz*NZ+is].habitat==Plateau) {	  VEGETATION::P_ann_mass[p] = V[iz*NZ+is].ann_mass_kg_cell; 	  VEGETATION::P_shrub_cov[p] = V[iz*NZ+is].get_shrub_cover();	  VEGETATION::P_ann_cov[p] = V[iz*NZ+is].get_ann_cover();	  VEGETATION::P_veg_cov[p] =  VEGETATION::P_shrub_cov[p] + VEGETATION::P_ann_cov[p] - VEGETATION::P_shrub_cov[p] * VEGETATION::P_ann_cov[p];	  p++;	  if (V[iz*NZ+is].ann_mass_kg_cell > 0.25)	  {		VEGETATION::P_ann_cells++; 		VEGETATION::P_veg_cells++;		if (V[iz*NZ+is].shrub_cov > 0.01) 		  VEGETATION::P_shrub_cells++;	  }	  else 		if (V[iz*NZ+is].shrub_cov > 0.01) 		{		  VEGETATION::P_shrub_cells++; 		  VEGETATION::P_veg_cells++;		}	  else VEGETATION::P_bare_cells++;	}		  else if (W[iz*NZ+is].habitat==North_f) {	// statistics North-facing slope	  VEGETATION::N_ann_mass[n] = V[iz*NZ+is].ann_mass_kg_cell;	  VEGETATION::N_shrub_cov[n] = V[iz*NZ+is].get_shrub_cover();	  VEGETATION::N_ann_cov[n] = V[iz*NZ+is].get_ann_cover();	  VEGETATION::N_veg_cov[n] =  VEGETATION::N_shrub_cov[n] + VEGETATION::N_ann_cov[n] - VEGETATION::N_shrub_cov[n] * VEGETATION::N_ann_cov[n];	  n++;	  if (V[iz*NZ+is].ann_mass_kg_cell > 0.25)	  {		VEGETATION::N_ann_cells++; 		VEGETATION::N_veg_cells++;		if (V[iz*NZ+is].shrub_cov > 0.01) 		  VEGETATION::N_shrub_cells++;	  }	  else 		if (V[iz*NZ+is].shrub_cov > 0.01) 	  {		VEGETATION::N_shrub_cells++; 		VEGETATION::N_veg_cells++;	  }	  else VEGETATION::N_bare_cells++;	}  		// statistics Wadi	else if(W[iz*NZ+is].habitat==Wadi) {		VEGETATION::W_ann_mass[w] = V[iz*NZ+is].ann_mass_kg_cell;	  VEGETATION::W_shrub_cov[w] = V[iz*NZ+is].get_shrub_cover();	  VEGETATION::W_ann_cov[w] = V[iz*NZ+is].get_ann_cover();	  VEGETATION::W_veg_cov[w] =  VEGETATION::W_shrub_cov[w] + VEGETATION::W_ann_cov[w] - VEGETATION::W_shrub_cov[w] * VEGETATION::W_ann_cov[w];	  w++;	  if (V[iz*NZ+is].ann_mass_kg_cell > 0.25) // 0.25 kg/cell	  {		VEGETATION::W_ann_cells++; 		VEGETATION::W_veg_cells++;		if (V[iz*NZ+is].shrub_cov > 0.01) // 1%		  VEGETATION::W_shrub_cells++;	  }	  else 		if (V[iz*NZ+is].shrub_cov > 0.01) 		{		  VEGETATION::W_shrub_cells++; 		  VEGETATION::W_veg_cells++;		}	  else VEGETATION::W_bare_cells++;	}		// statistics South-facing slope	else	{	  VEGETATION::S_ann_mass[s] = V[iz*NZ+is].ann_mass_kg_cell;	  VEGETATION::S_shrub_cov[s] = V[iz*NZ+is].get_shrub_cover();	  VEGETATION::S_ann_cov[s] = V[iz*NZ+is].get_ann_cover();	  VEGETATION::S_veg_cov[s] =  VEGETATION::S_shrub_cov[s] + VEGETATION::S_ann_cov[s] - VEGETATION::S_shrub_cov[s] * VEGETATION::S_ann_cov[s];	  s++;	  if (V[iz*NZ+is].ann_mass_kg_cell > 0.25)	  {		VEGETATION::S_ann_cells++; 		VEGETATION::S_veg_cells++;		if (V[iz*NZ+is].shrub_cov > 0.01) 		  VEGETATION::S_shrub_cells++;	  }	  else 		if (V[iz*NZ+is].shrub_cov > 0.01) 		{		  VEGETATION::S_shrub_cells++; 		  VEGETATION::S_veg_cells++;		}	  else VEGETATION::S_bare_cells++;	} // end else South  } // end for  } // end statistics