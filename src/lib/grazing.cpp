/* *  grazing.cpp *  MKLandscape * *  Created by Forschung on Fri Jun 23 2006. *  Copyright (c) 2006 Martin Koechy. All rights reserved. * */#include "grazing.h"#include <math.h>extern int NZ, NS;void foraging (VEGETATION* V, float lsu, WATER* W){   extern long N_cells, S_cells, W_cells, P_cells;	float shrub_cov_to_mass_kg_cell = 4.0;    VEGETATION::sum_veg_mass = 0.0;  VEGETATION::sum_mass_consumed = 0.0;	float cell_sum_vegmass = 0.0;      for(int iz = 0; iz<NZ; iz++)	  for(int is = 0; is < NS; is++) {		  cell_sum_vegmass = (V[iz*NZ+is].ann_mass_kg_cell + shrub_cov_to_mass_kg_cell*V[iz*NZ+is].shrub_cov);		  VEGETATION::sum_veg_mass += cell_sum_vegmass;	switch (W[iz*NZ+is].habitat){		case North_f: VEGETATION::N_sum_veg_mass += cell_sum_vegmass; break;		case South_f: VEGETATION::S_sum_veg_mass += cell_sum_vegmass; break;		case Plateau: VEGETATION::P_sum_veg_mass += cell_sum_vegmass; break;		case Wadi   : VEGETATION::W_sum_veg_mass += cell_sum_vegmass; break;	}	  }        // calculation of total demand per year assuming 10 kg/(ha * lsu * day)  float demand = lsu* days_in_year * feed_demand_kg_LSU_ha_d * cell_area_m2 * (NZ*NS)/10000.0;    // grazing rate per cell assuming constant grazing to meet demand  float graze = VEGETATION::sum_veg_mass ? demand/VEGETATION::sum_veg_mass : 0.0;    float g_intens = 0.0;  float consumed = 0.0;  int iz = 1000, is = 1000;  //******************** Foraging *************************  long browse_zaehler = 0;  long graze_zaehler = 0;  while (VEGETATION::sum_mass_consumed < demand  &&  graze_zaehler< 2*NZ*NS  		 && VEGETATION::sum_mass_consumed < VEGETATION::sum_veg_mass) // 2006-06-15: Laufbedingung von ODER zu UND geÃ¤ndert  {	//   find a random cell	iz = int(z01()*NZ);	is = int(z01()*NS);	  	g_intens = min(1.0, 2*z01() * graze);               //graze intens on patch level		if (V[iz*NZ+is].ann_mass_kg_cell || V[iz*NZ+is].shrub_cov)	{	 if (V[iz*NZ+is].ann_mass_kg_cell )	 {consumed = V[iz*NZ+is].ann_mass_kg_cell * g_intens * V[iz*NZ+is].ann_mass_kg_cell/(V[iz*NZ+is].ann_mass_kg_cell 				+ shrub_cov_to_mass_kg_cell*V[iz*NZ+is].shrub_cov); 		 //grazing in proportion to herbaceous mass; 4 is the conversion factor from cover to mass	  VEGETATION::sum_mass_consumed += consumed;	  V[iz*NZ+is].ann_mass_kg_cell -= consumed;		 switch (W[iz*NZ+is].habitat){			 case North_f: VEGETATION::N_sum_mass_consumed += consumed; break;			 case South_f: VEGETATION::S_sum_mass_consumed += consumed; break;			 case Plateau: VEGETATION::P_sum_mass_consumed += consumed; break;			 case Wadi   : VEGETATION::W_sum_mass_consumed += consumed; break;		 }	 }	  if (V[iz*NZ+is].shrub_cov) 	  {consumed = V[iz*NZ+is].shrub_cov * shrub_cov_to_mass_kg_cell * g_intens 		  * (shrub_cov_to_mass_kg_cell * V[iz*NZ+is].shrub_cov)/(V[iz*NZ+is].ann_mass_kg_cell 		  + shrub_cov_to_mass_kg_cell*V[iz*NZ+is].shrub_cov); //grazing in proportion to herbaceous mass	  VEGETATION::sum_mass_consumed += consumed;	  V[iz*NZ+is].shrub_cov -= consumed/shrub_cov_to_mass_kg_cell;	 		  switch (W[iz*NZ+is].habitat){			  case North_f: VEGETATION::N_sum_mass_consumed += consumed; break;			  case South_f: VEGETATION::S_sum_mass_consumed += consumed; break;			  case Plateau: VEGETATION::P_sum_mass_consumed += consumed; break;			  case Wadi   : VEGETATION::W_sum_mass_consumed += consumed; break;		  }	  }	}	else	  graze_zaehler++;  } // end while}